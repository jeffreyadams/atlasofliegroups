
The "dualmap" command computes the bijection from a block to its dual
block. See the help file for the dualblock command.

Fix a block B of representations of a real form G(R) of G, with
regular integral infinitesimal character. The dual block is a block of
representations of a real form of G^v. The dualblock command gives
this block. The dualmap command specifies the bijection B -> B^v.

The dual map can be read off from the output of block and dual
block: it is the map which exchanges the first terms (x,y) in
parentheses. If block has an entry (for example)

10( 10,228): ...

and dualblock has

334(228, 10):  ...

then dual map takes 10 to 334.

Example: principal block for Sp(4,R) and its dual

The principal block for Sp(4,R) and its dual are (see the help file
for the dualbock command):

block: block
Name an output file (return for stdout, ? to abandon):
 0( 0,6):  0  0  [i1,i1]   1   2   ( 6, *)  ( 4, *)
 1( 1,6):  0  0  [i1,i1]   0   3   ( 6, *)  ( 5, *)
 2( 2,6):  0  0  [ic,i1]   2   0   ( *, *)  ( 4, *)
 3( 3,6):  0  0  [ic,i1]   3   1   ( *, *)  ( 5, *)
 4( 4,4):  1  2  [C+,r1]   8   4   ( *, *)  ( 0, 2)   2
 5( 5,4):  1  2  [C+,r1]   9   5   ( *, *)  ( 1, 3)   2
 6( 6,5):  1  1  [r1,C+]   6   7   ( 0, 1)  ( *, *)   1
 7( 7,2):  2  1  [i2,C-]   7   6   (10,11)  ( *, *)   2,1,2
 8( 8,3):  2  2  [C-,i1]   4   9   ( *, *)  (10, *)   1,2,1
 9( 9,3):  2  2  [C-,i1]   5   8   ( *, *)  (10, *)   1,2,1
10(10,0):  3  3  [r2,r1]  11  10   ( 7, *)  ( 8, 9)   1,2,1,2
11(10,1):  3  3  [r2,rn]  10  11   ( 7, *)  ( *, *)   1,2,1,2
block: dualblock
Name an output file (return for stdout, ? to abandon):
 0(0,10):  0  0  [i1,i2]   1   0   ( 2, *)  ( 3, 4)
 1(1,10):  0  0  [i1,ic]   0   1   ( 2, *)  ( *, *)
 2(2, 7):  1  1  [r1,C+]   2   7   ( 0, 1)  ( *, *)   1
 3(3, 8):  1  2  [C+,r2]   5   4   ( *, *)  ( 0, *)   2
 4(3, 9):  1  2  [C+,r2]   6   3   ( *, *)  ( 0, *)   2
 5(4, 4):  2  2  [C-,i2]   3   5   ( *, *)  ( 8,10)   1,2,1
 6(4, 5):  2  2  [C-,i2]   4   6   ( *, *)  ( 9,11)   1,2,1
 7(5, 6):  2  1  [i2,C-]   7   2   ( 8, 9)  ( *, *)   2,1,2
 8(6, 0):  3  3  [r2,r2]   9  10   ( 7, *)  ( 5, *)   2,1,2,1
 9(6, 1):  3  3  [r2,r2]   8  11   ( 7, *)  ( 6, *)   2,1,2,1
10(6, 2):  3  3  [rn,r2]  10   8   ( *, *)  ( 5, *)   2,1,2,1
11(6, 3):  3  3  [rn,r2]  11   9   ( *, *)  ( 6, *)   2,1,2,1


The bijection B -> B^v is given by:

empty: dualmap
Name an output file (return for stdout, ? to abandon):
[8, 9, 10, 11, 5, 6, 7, 2, 3, 4, 0, 1]

In other words 0->8, 1->9, 2->10, ..., 11->1. This corresponds to
switching (x,y) as follows:

0 <->(0,6) -> (6,0) <-> 8
1 <->(1,6) -> (6,1) <-> 9
...
11 <->(10,1) -> (1,10) <-> 1


The X command is a version of the KGB command, printing a structure that
encompasses the KGB structures for all real forms in an inner class at once

For this reason it does not require selecting a real form, it just requires
(and asks for if not already known) a complex group and an inner class.

The output format, apart from the very first line, is similar to that of KGB,
to which we refer for more details; the successive columns give a sequence
number, a length, the statuses of all simple roots at this element, the cross
action links, the Cayley transform links, a rational vector that distinguishes
elements lying over the same involution, the Cartan class, and the involution.

The main difference with the KGB output is the rational vector which replaces
a 0-1 vector; it is to be interpreted as a rational coweight that represents a
torus element under the exponential map, so it is meaningful only modulo the
integral coweight lattice X_* (the components are meaningful modulo 1). Like
in KGB this information serves to determine the statuses of the simple roots,
notably distinguishing compact and noncompact imaginary roots. However the
rational vector does so in a more self-contained way that does not depend on
the real form being known, but rather implicitly determines that real form.

There can be more than one occurrence of a same KGB structure as a connected
(through cross actions and Cayley transforms) component of the X structure.
This is related to the fact that there can be more than one strong real form
(conjugacy class of strong involutions) for the same weak real form in the
fiber over a given root datum involution tau (see the 'strongreal' command).

Here is an example where the X structure is computed and compared with the KGB
structures for the two (weak) real forms in an in inner class.

empty: type
Lie type: A3 sc s
main: X
Name an output file (return for stdout, ? to abandon):
\exp(i\pi\check\rho) = \exp(2i\pi([3,0,3]/4))
 0:  0  [C,n,C]    4   1   4     *   8   *     [0,0,0]/1 0 e
 1:  0  [C,n,C]    5   0   5     *   8   *     [0,1,0]/2 0 e
 2:  0  [C,c,C]    6   2   6     *   *   *     [1,2,1]/4 0 e
 3:  0  [C,c,C]    7   3   7     *   *   *     [1,0,1]/4 0 e
 4:  1  [C,C,C]    0  10   0     *   *   *     [0,0,0]/1 0 1xe
 5:  1  [C,C,C]    1  11   1     *   *   *     [1,1,0]/2 0 1xe
 6:  1  [C,C,C]    2  12   2     *   *   *     [1,2,1]/4 0 1xe
 7:  1  [C,C,C]    3  13   3     *   *   *    [-1,0,1]/4 0 1xe
 8:  1  [C,r,C]    9   8  14     *   *   *     [0,0,0]/1 1 2^e
 9:  2  [C,C,C]    8  15  16     *   *   *     [0,0,0]/1 1 1x2^e
10:  2  [n,C,n]   11   4  11    15   *  17     [0,0,0]/1 0 2x1xe
11:  2  [n,C,n]   10   5  10    15   *  17     [1,0,0]/2 0 2x1xe
12:  2  [c,C,c]   12   6  12     *   *   *     [1,0,1]/4 0 2x1xe
13:  2  [c,C,c]   13   7  13     *   *   *    [-1,0,1]/4 0 2x1xe
14:  2  [C,C,C]   16  17   8     *   *   *     [0,0,0]/1 1 3x2^e
15:  3  [r,C,n]   15   9  15     *   *  18     [0,0,0]/1 1 1^2x1xe
16:  3  [C,n,C]   14  16   9     *  18   *     [0,0,0]/1 1 1x3x2^e
17:  3  [n,C,r]   17  14  17    18   *   *     [0,0,0]/1 1 2x3x2^e
18:  4  [r,r,r]   18  18  18     *   *   *     [0,0,0]/1 2 1^2x3x2^e

main: KGB
(weak) real forms are:
0: sl(2,H)
1: sl(4,R)
enter your choice: 0
kgbsize: 3
Name an output file (return for stdout, ? to abandon):
Base grading: [101].
0:  0  [C,c,C]   1  0  1    *  *  *  (0,0,0)#0 e
1:  1  [C,C,C]   0  2  0    *  *  *  (0,0,0) 0 1xe
2:  2  [c,C,c]   2  1  2    *  *  *  (0,1,0) 0 2x1xe
real: q
main: KGB
(weak) real forms are:
0: sl(2,H)
1: sl(4,R)
enter your choice: 1
kgbsize: 13
Name an output file (return for stdout, ? to abandon):
Base grading: [111].
 0:  0  [C,n,C]    3   1   3     *   2   *  (0,0,0)#0 e
 1:  0  [C,n,C]    4   0   4     *   2   *  (0,1,0)#0 e
 2:  1  [C,r,C]    6   2   5     *   *   *  (0,0,0) 1 2^e
 3:  1  [C,C,C]    0   7   0     *   *   *  (0,0,0) 0 1xe
 4:  1  [C,C,C]    1   8   1     *   *   *  (0,1,1) 0 1xe
 5:  2  [C,C,C]   10   9   2     *   *   *  (0,0,0) 1 3x2^e
 6:  2  [C,C,C]    2  11  10     *   *   *  (0,0,0) 1 1x2^e
 7:  2  [n,C,n]    8   3   8    11   *   9  (0,0,0) 0 2x1xe
 8:  2  [n,C,n]    7   4   7    11   *   9  (0,0,1) 0 2x1xe
 9:  3  [n,C,r]    9   5   9    12   *   *  (0,0,0) 1 2x3x2^e
10:  3  [C,n,C]    5  10   6     *  12   *  (0,0,0)#1 1x3x2^e
11:  3  [r,C,n]   11   6  11     *   *  12  (0,0,0) 1 1^2x1xe
12:  4  [r,r,r]   12  12  12     *   *   *  (0,0,0)#2 1^2x3x2^e


We see that the X structure has 19 elements, and the KGB structures have 3 and
13 elements respectively. In fact the KGB structure for the real form sl(2,H)
is present in the X structure twice: once as lines 2,6,12 and once as lines
3,7,13. The remaining lines correspond to the KGB for the real form sl(4,R).

We can check using 'strongreal' that on Cartan class #0 the real form #0 is
present with two distinct strong real forms

real: strongreal
choose Cartan class (one of 0,1,2): 0
Name an output file (return for stdout, ? to abandon):

there are 2 real form classes:

class #0, possible square: exp(2i\pi([2,0,2]/4))
real form #1: [0,1] (2)

class #1, possible square: exp(2i\pi([0,0,0]/4))
real form #0: [0] (1)
real form #0: [1] (1)

On the other Cartan classes only real form #1 is present, and only once.

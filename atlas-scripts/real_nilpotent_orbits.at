<complex_nilpotent_orbits.at

{a real nilpotent orbit is a pair ([int] H,KGBElt x)
 note the order, to distinguish from KHighestWeight (KGBElt x,vec H) (see K.at)
 x should in the distinguished fiber
 H\in X_* is the semisimple element of a Lie triple
 \theta_x(H)=H
 set \q=parabolic_by_cwt(x,H), then 
 orbit=induced from trivial orbit of Levi factor, equivalently
      =associated variety of A_q(lambda)
 H must satisfy <\alpha,H>\in {0,1,2} for all simple alpha
 (in particular H is dominant)
 not all such H are allowed
 if (H,x) is given, with H non-dominant, replace it with (wx,wH) 
}

set_type RealNilpotentOrbit = ([int] H,KGBElt x)

set parabolic_of_orbit(RealNilpotentOrbit O)=Parabolic:parabolic_by_cwt(O.H,O.x)
{caution: O.Levi gives the wrong answer due to conflict with KGPElt}
set Levi_of_orbit(RealNilpotentOrbit O)=RealForm:Levi(parabolic_of_orbit(O))
set root_datum(RealNilpotentOrbit O)=RootDatum:O.x.root_datum
set real_form(RealNilpotentOrbit O)=RealForm:O.x.real_form
set complex_orbit(RealNilpotentOrbit O)=ComplexNilpotent:(O.root_datum,O.H)
set dimension(RealNilpotentOrbit O)=int:dim_nilpotent(O.complex_orbit)

set simple_roots_from_coweight(RootDatum rd, ratvec v)=##for alpha@i in simple_roots(rd) do
if alpha*v=0 then [i] else [] fi od

set simple_roots_from_coweights(RootDatum rd,[ratvec] list)=for v in list do simple_roots_from_coweight(rd,v) od

{coweights is a list of coweights H, each of which defines a parabolic with simple roots
alpha such that alpha*H=0
}


set potential_real_nilpotent_orbits(RealForm G,[ComplexNilpotent] complex_orbits, [[int]] complex_orbit_closures)=
let closures=[] then
orbits=[] in
for (rd,H)@i in complex_orbits do
  let roots_of_Levi=simple_roots_from_coweight(rd,H) then
  P_complex= (rd,roots_of_Levi) then
  theta_stable_parabolics=theta_stable_parabolics(G,P_complex) in
  for P in theta_stable_parabolics do orbits#:=([int]:H,x_min(P));closures#:=complex_orbit_closures[i]  od od ;(orbits,closures)

set potential_real_nilpotent_orbits(RealForm G)=let (orbits,closures)=orbits_closures(G) in potential_real_nilpotent_orbits(G,orbits,closures)

{

let semisimple_elements_of_orbits=for (,H) in O do H od then
complex_parabolics = for roots in simple_roots_from_coweights(G,semisimple_elements) do (root_datum(G),roots) od then
 theta_stable_parabolics= for P in complex_parabolics do theta_stable_parabolics(G,P) od then
 potential_orbits=for H@i in coweights do for P in theta_stable_parabolics[i] do (H,x_min(P)) od od
 in potential_orbits


}
<<all.at
<<coordinates.at
set G=quasicompact_form(GL(8,R))
set S=SL(4,H)
set delta_G=G.distinguished_involution
set delta_S=S.distinguished_involution
set formula_G=twisted_c_form_irreducible_as_sum_of_standards(trivial(G))
set formula_S=twisted_c_form_irreducible_as_sum_of_standards(trivial(S))

set A=change_basis(S,simple_roots(G))
set B=inverse_change_basis(G,simple_roots(S))

set convert_SG(Param pS, ratmat M)=Param:parameter(KGB(G,#x(pS)), M*lambda(pS), M*nu(pS))
set convert_SG(ParamPol P, ratmat M)=ParamPol:let rv=null_module(G) in  for c@p in P do rv+:=c*convert_SG(p,M) od;rv
set convert_SG(Param pS)=Param:convert_SG(pS,A)
set convert_SG(ParamPol P)=ParamPol:convert_SG(P,A)

{convert(formula_S,A)=formula_G}

set BG=block_of(trivial(G))
set BS=block_of(trivial(S))

set pG=BG[1]
set pS=BS[1]

prints("pS corresponds to pG: ", convert_SG(pS,A)=pG)
prints(new_line,"finalize_extended pG:", finalize_extended(pG*0,delta_G))
prints(new_line,"finalize_extended pS:", finalize_extended(pS*0,delta_S))

set EG=E(delta_G,pG)
set ES=E(delta_S,pS)
set FS=ES
FS.g:=(EG.g)*B
FS.l:=null(7)



prints("ES=");display(ES)
prints("ES is valid:", valid(ES))
prints("parameter(ES)= ", parameter(ES))


prints("FS=");display(FS)
prints("FS is valid:", valid(FS))
prints("parameter(FS)= ", parameter(FS))

prints("inner_class(ES)=inner_class(FS):", ES.ic=FS.ic)
prints("real form of ES:", real_form(parameter(ES)))
prints("real form of FS:", real_form(parameter(FS)))
{prints("parameter(ES)=parameter(FS):", parameter(ES)=parameter(FS))}  {real form mismatch, but should be true}

prints(new_line,"Main Problem:")
{FS and EG are essentially the same, but finalize_extended behaves differently}

prints("FS=");display(FS)
prints("parameter(FS)=", parameter(FS))

prints("EG=");display(EG)
prints("parameter(EG)=", parameter(EG))
prints("convert(parameter(FS))=parameter(EG):", convert_SG(parameter(FS))=parameter(EG))
prints("EG.g*B=FS.g: ", EG.g*B=FS.g)
prints("B*FS.gamma=EG.gamma:", B*FS.gamma=EG.gamma)

prints(new_line,"finalize_extended parameter(EG)*0,delta_G)=", finalize_extended(parameter(EG)*0,delta_G))
prints(new_line,"finalize_extended parameter(FS)*0,delta_S)=", finalize_extended(parameter(FS)*0,delta_S))

set pS0=pS*0
set pG0=pG*0
set fpS0=first_param(finalize(pS0))
set fpG0=first_param(finalize(pG0))

set rdSint=integrality_datum(pS0)
set icSint=inner_class(rdSint,delta_S)
set Sint=real_forms(icSint)[0]
set pSint=parameter(KGB(Sint,1),lambda(pS),nu(pS))
set BSint=block_of(pSint)
set pS0int=parameter(KGB(Sint,1),lambda(pS0),nu(pS0))

set rdGint=integrality_datum(pG0)
set icGint=inner_class(rdGint,delta_G)
set Gint=real_forms(icGint)[0]
set pGint=parameter(KGB(Gint,1),lambda(pG),nu(pG))
set BGint=block_of(pGint)
set pG0int=parameter(KGB(Gint,1),lambda(pG0),nu(pG0))

<misc.at {for box}
<basic.at {for adjoint, count}

{this script seeks to estimate the volume of cvx_hull(W*rho), compared
to the volume of the FPP (which is 1/(order of center for the sc group).}
{Volume estimate is hullCount/target}
{volume of FPP is 1/(#center of simply conn)}
{volume of fund alcove is 1/#W.}

set counts(RootDatum Ggiven, int d) = void:
    let G=Ggiven.adjoint
    {now simple roots are basis}
    then r = G.rank, twoRho = G.two_rho, twodRho = d*G.two_rho
    then size = twodRho + for j:r do 1 od
    then domBox = for b in box(size) do if is_dominant(G,b) then [b] else []
    fi od.##
    then hullCount= #domBox
    then FPPCount = count(for b in domBox do is_dominant(G,twodRho - b) od)
    in prints("hullCount = ",hullCount,", FPPCount = ",FPPCount,
    ", target = ", (2*d)^r)


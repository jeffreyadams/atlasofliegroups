<basic.at
<lietypes.at
<elliptic.at

{tables of elliptic conjugacy classes for exceptional groups, from Geck-Pfeiffer
 Root Datum, characteristic polynomial, order, length, name, size of centralizer
 Currently the name (following GP) is not implemented
}

{for convenience entering E8 entries in the table below}
set f([int] v)=
rat_as_int(696729600/(2^v[0]*3^v[1]*5^v[2]*7^v[3]))

set elliptic_exceptional_table=[(string,[int],int,int,string,int)]:
[(G2,[  1, -1,  1 ],6,2,"name",6),
(G2,[ 1, 1, 1 ],3,4,"name",6),
(G2,[ 1, 2, 1 ],2,6,"name",12),
(F4,[  1,  0, -1,  0,  1 ],12,4,"name",12),
(F4,[ 1, 0, 0, 0, 1 ],8,6,"name",8),
(F4,[  1, -2,  3, -2,  1 ],6,8,"name",72),
(F4,[ 1, 1, 0, 1, 1 ],6,10,"name",36),
(F4,[ 1, 1, 0, 1, 1 ],6,10,"name",36),
(F4,[ 1, 0, 2, 0, 1 ],4,12,"name",96),
(F4,[ 1, 2, 2, 2, 1 ],4,14,"name",32),
(F4,[ 1, 2, 3, 2, 1 ],3,16,"name",72),
(F4,[ 1, 4, 6, 4, 1 ],2,24,"name",1152),
(E6,[  1,  1,  0, -1,  0,  1,  1 ], 12, 6,"name", 51840\(2^5*3^3*5)),
(E6,[ 1, 0, 0, 1, 0, 0, 1 ] , 9, 8, "name", 51840\(2^7*3^2*5)),
(E6, [  1, -1,  2, -1,  2, -1,  1 ],6,12,"name",51840\(2^4*3^2*5)),
(E6, [ 1, 2, 2, 2, 2, 2, 1 ], 6, 14 ,"name",51840\(2^5*3^2*5)),
(E6, [ 1, 3, 6, 7, 6, 3, 1 ], 3, 24,"name",51840\(2^4*5)),
(E7,[  1,  1,  0, -1, -1,  0,  1,  1 ],18,7,"name",2903040\(2^9*3^2*5*7)),
(E7,[ 1, 0, 0, 0, 0, 0, 0, 1 ],14,9,"name",2903040\(2^9*3^4*5)),
(E7,[  1,  0, -1,  1,  1, -1,  0,  1 ],12,11,"name",2903040\(2^7*3^3*5*7)),
(E7,[  1, -1,  1,  0,  0,  1, -1,  1 ],30,13,"name",2903040\(2^9*3^3*7)),
(E7,[ 1, 2, 1, 0, 0, 1, 2, 1 ],10,15,"name",2903040\(2^8*3^3*7)),
(E7,[ 1, 1, 1, 1, 1, 1, 1, 1 ],8,17,"name",2903040\(2^5*3^4*5*7)),
(E7,[  1, -2,  3, -1, -1,  3, -2,  1 ],6,21,"name",2903040\(2^6*5*7)),
(E7,[ 1, 1, 0, 2, 2, 0, 1, 1 ],6,23,"name",2903040\(2^7*3*5*7)),
(E7,[ 1, 2, 3, 3, 3, 3, 2, 1 ],6,25,"name",2903040\(2^6*3^2*5*7)),
(E7,[ 1, 4, 6, 5, 5, 6, 4, 1 ],6,31,"name",2903040\(2^5*3*7)),
(E7,[ 1, 3, 5, 7, 7, 5, 3, 1 ],4,33,"name",2903040\(2^2*3^3*5*7)),
(E7,[  1,  7, 21, 35, 35, 21,  7,  1 ],2,63,"name",(2903040\1)),

(E8,[  1,  1,  0, -1, -1, -1,  0,  1,  1 ],30,8,"name",f([13,4,1,1])),
(E8,[  1,  0,  0,  0, -1,  0,  0,  0,  1 ],24,10,"name",f([11,4,2,1])),
(E8,[  1,  0, -1,  0,  1,  0, -1,  0,  1 ],20,12,"name",f([12,5,1,1])),
(E8,[  1, -1,  1, -1,  1, -1,  1, -1,  1 ],18,14,"name",f([13,2,2,1])),
(E8,[  1, -1,  0,  1, -1,  1,  0, -1,  1 ],15,16,"name",f([13,4,1,1])),
(E8,[  1,  2,  1, -1, -2, -1,  1,  2,  1 ],18,16,"name",f([12,2,2,1])),
(E8,[ 1, 1, 0, 0, 0, 0, 0, 1, 1 ],14,18,"name",f([12,5,2,0])),
(E8,[  1,  0, -2,  0,  3,  0, -2,  0,  1 ],12,20,"name",f([9,3,2,1])),

(E8,[ 1, 0, 1, 0, 0, 0, 1, 0, 1 ],         12,22,"name",f([11,3,2,1])),
(E8,[  1, -2,  2,  0, -1,  0,  2, -2,  1 ],12,22,"name",f([9,3,2,1])),

(E8,[  1, -2,  3, -4,  5, -4,  3, -2,  1 ],10,24,"name",f([11,4,0,1])),
(E8,[  1,  1, -1,  0,  2,  0, -1,  1,  1 ],12,24,"name",f([10,3,2,1])),
(E8,[  1,  2,  2,  0, -1,  0,  2,  2,  1 ],12,26,"name",f([9,3,2,1])),
(E8,[ 1, 0, 0, 1, 0, 1, 0, 0, 1 ],30,26,"name",f([12,4,1,1])),
(E8,[ 1, 1, 1, 1, 1, 1, 1, 1, 1 ],9,28,"name",f([13,2,2,1])),
(E8,[ 1, 0, 0, 0, 2, 0, 0, 0, 1 ],8,30,"name",f([8,4,2,1])),
(E8,[ 1, 3, 3, 1, 0, 1, 3, 3, 1 ],10,32,"name",f([10,4,0,1])),
(E8,[ 1, 2, 2, 2, 2, 2, 2, 2, 1 ],8,34,"name",f([7,5,2,1])),
(E8,[   1,  -4,  10, -16,  19, -16,  10,  -4,   1 ],6,40,"name",f([7,0,1,1])),
(E8,[  1, -1,  1,  2, -2,  2,  1, -1,  1 ],6,42,"name",f([9,0,2,1])),
(E8,[ 1, 2, 1, 2, 4, 2, 1, 2, 1 ],6,44,"name",f([9,1,2,1])),
(E8,[ 1, 0, 2, 0, 3, 0, 2, 0, 1 ],6,44,"name",f([8,2,2,1])),
(E8,[ 1, 3, 5, 6, 6, 6, 5, 3, 1 ],6,46,"name",f([9,2,2,1])),
(E8,[ 1, 1, 2, 3, 2, 3, 2, 1, 1 ],12,46,"name",f([8,3,2,1])),
(E8,[ 1, 2, 3, 4, 5, 4, 3, 2, 1 ],5,48,"name",f([11,4,0,1])),
(E8,[ 1, 0, 4, 0, 6, 0, 4, 0, 1 ],4,60,"name",f([4,3,1,1])),
(E8,[  1,  5, 10, 11, 10, 11, 10,  5,  1 ],6,64,"name",f([6,0,1,1])),
(E8,[  1,  4,  8, 12, 14, 12,  8,  4,  1 ],4,66,"name",f([3,3,2,1])),
(E8,[  1,  4, 10, 16, 19, 16, 10,  4,  1 ],3,80,"name",f([7,0,1,1])),
(E8,[  1,  8, 28, 56, 70, 56, 28,  8,  1 ],2,120,"name",f([0,0,0,0]))]

set lookup_elliptic_order(string lietype,vec P)=int:
let index=first(for (name,char_poly,,,,) in elliptic_exceptional_table do name=lietype and P=char_poly od) then
(,,,,,order)=elliptic_exceptional_table[index] in order

set lookup_elliptic_order(LieType lt,vec P)=int:lookup_elliptic_order(to_string(lt),P)

<weak_packets.at

{The second list describes the parabolic}
set weak_packets_parabolically_induced(RealForm G, [int] parabnodelist)=
let P=Parabolic:(parabnodelist,trivial(G).x)
then L=Levi(P)
then Lorbits=L.dual_orbits
then wp=weak_packets(L)
then output=[]
in for p in parameters(wp) do for ppp in monomials(real_induce_irreducible(p,G)) do output#:=ppp od od; output

set weak_packets_parabolically_induced_from_all_parabolics(RealForm G)=
let alloutput=[]
in for k:#power_set(semisimple_rank(G))-1 from 1 do
(
let parabpackets=weak_packets_parabolically_induced(G,power_set(semisimple_rank(G))[k])
in for ppp in parabpackets do alloutput#:=ppp od
)
od; alloutput

set maximalparablist(RealForm G)=
let ps=power_set(semisimple_rank(G))
then psoutput=[]
in for aps in ps do if #aps=semisimple_rank(G)-1 then psoutput#:=aps fi od;psoutput

set weak_packets_parabolically_induced_from_all_parabolics(RealForm G)=
let alloutput=[]
in for ps in maximalparablist(G) do
(
let parabpackets=weak_packets_parabolically_induced(G,ps)
in for ppp in parabpackets do alloutput#:=ppp od
)
od; alloutput

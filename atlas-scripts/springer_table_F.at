<springer_tables.at


set springer_by_signature(ComplexNilpotent O)=
assert(O.root_datum.Lie_type=Lie_type("F4"),"Not type F_4");
let d=O.diagram_normalized_simple in
if d=[0,0,0,0] then [1,-1,-1]   {1 -> phi(1,24)}
elif d=[1,0,0,0] then [2,0,-2]  {A1 -> phi(2,16)''}
elif d=[0,0,0,1] then [4,-2,-2] {A1~ -> phi(4,13)}
elif d=[2,0,0,0] then [8,0,-4]  {A2 -> phi(8,9)''}
elif d=[0,1,0,0] then [9,-3,-3] {A1+A1~ -> phi(9,10)}
elif d=[0,0,0,2] then [8,-4,0]  {A2~ -> phi(8,9)'}
elif d=[0,0,1,0] then [4,2,-2]  {A2+A1~ -> phi(4,7)''}
elif d=[2,0,0,1] then [9,3,-3]  {B2->phi(9,6)''}
elif d=[0,1,0,1] then [6,0,0]   {A2~+A1 -> phi(6,6)''}  {ambiguous, determined by  sum()=15 {NOT 19}, see springer_F4 below; note this orbit is not special}
elif d=[1,0,1,0] then [16,0,0]  {C3(a1) -> phi(16,5)}
elif d=[0,2,0,0] then [12,0,0]  {F4(a3) -> phi(12,4)}
elif d=[2,2,0,0] then [8,4,0]   {B3 -> phi(8,3)''}
elif d=[1,0,1,2] then [8,0,4]   {C3 -> phi(8,3)'}
elif d=[0,2,0,2] then [9,3,3]   {F4(a2) -> phi(9,2)}
elif d=[2,2,0,2] then [4,2,2]   {F4(a1) -> phi(4,1)}
elif d=[2,2,2,2] then [1,1,1]   {F4 -> phi(1,0)}
else error("error in springer correspondence") fi

set springer_F4(CharacterTable ct,ComplexNilpotent O)=int:
let characters=ct.characters then
sig=springer_by_signature(O) in
if sig=[6,0,0] then
{ first(for v in characters do ct.signature(v)=sig and sum(v)=19 od)}
 first(for v in characters do ct.signature(v)=sig and sum(v)=15 od)     {mistake corrected: phi(6,6)'' sum=19, phi(6,6)' sum=15}
 else
 first(for v in characters do ct.signature(v)=sig od)
fi

set springer_F4(CharacterTable ct)=(ComplexNilpotent->int):(ComplexNilpotent O):springer_F4(ct,O)

set dual_orbit_F4(ComplexNilpotent O)=
let rd=O.root_datum then
dual_rd=dual(rd) then
dual_orbits=dual_rd.orbits then
d=O.diagram_normalized_simple then
dual_normalized=
  if d=[0,0,0,0] then [2,2,2,2]
elif d=[1,0,0,0] then [2,2,0,2]
elif d=[0,0,0,1] then [2,2,0,2]
elif d=[0,1,0,0] then [0,2,0,2]
elif d=[2,0,0,0] then [2,2,0,0]
elif d=[0,0,0,2] then [1,0,1,2]
elif d=[0,0,1,0] then [0,2,0,0]
elif d=[2,0,0,1] then [0,2,0,0]
elif d=[0,1,0,1] then [0,2,0,0]
elif d=[1,0,1,0] then [0,2,0,0]
elif d=[0,2,0,0] then [0,2,0,0]
elif d=[1,0,1,2] then [0,0,0,2]
elif d=[2,2,0,0] then [2,0,0,0]
elif d=[0,2,0,2] then [0,1,0,0]
elif d=[2,2,0,2] then [0,0,0,1]
elif d=[2,2,2,2] then [0,0,0,0]
else error("error computing dual orbit") fi
then
dual_orbit_number=first(for O in dual_orbits do O.diagram_normalized_simple=dual_normalized od)
in
dual_orbits[dual_orbit_number]


set springer_table_F4(CharacterTable ct)=SpringerTable:
(ct,simply_connected(F4).orbits,
dual_orbit_F4@ComplexNilpotent,
dual_orbit_F4@ComplexNilpotent,
springer_F4(ct))

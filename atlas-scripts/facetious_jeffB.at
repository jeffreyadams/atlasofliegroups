< facetious

set FPP_indices_list(SimpleAffine Affd, int dim, [ratvec] vlist) =
    [FacetVertsIndex]:
    let fundVertsDim = facets_fundamental(Affd,dim)
    then FBs = [ratvec]:
    	 for FV in fundVertsDim do sum(Affd.rank,FV)/(dim+1) od
    then vertexIndex=index_in(vlist)
    in  [FacetVertsIndex]:
       for FV@j in fundVertsDim
       do{A}
	   let WBsID= [FacetBary]:
    	       for wFBn in Weyl_orbit(Affd,FBs[j].numer)
               do{B}
		  if is_integrally_dominant(Affd,wFBn/FBs[j].denom)
        	  then [wFBn/FBs[j].denom]
		  else []
        	  fi
               od.##{B}
	   in  for wFB in WBsID
       	       do{C}
       	       let (w,) = from_dominant(Affd,wFB)
       	       in [FacetVertsIndex]:
		  for tau in FPPtauRoots(Affd,wFB)
       		  do{D} vec: for v in (tau,w)*FV do{E} vertexIndex(v) od{E}
       	       	  od{D}{ now type [FacetVertsIndex] }
	       od{C}.##
    	od.##{A}

set FPP_indices_list(SimpleAffine Affd, int dim) = [FacetVertsIndex]:
    FPP_indices_list(Affd, dim, FPP_vertices(Affd))

set writeInds([FacetVertsIndex] LIST) = void:
    begin
	 let name = string: "facets_saved"##to_string(#LIST[0]-1)
	 in prints("set ",name," = [vec]: for i:",#LIST," do [] od")
	 ; for i:#LIST
	   do prints("void:",name,"[",i,"]:=",LIST[i])
	   od
    end


set G=Sp(6,R)
set (H,M,Hd)=endoscopic_group(G,[1,1,0]/2)  
set unip_H=unipotent_representations(H)
set ph=unip_H[6]
set gamma_H=ph.infinitesimal_character
set gamma_G=gamma_H*M
set y=y_gen(ph)
set phi_H=phi(y,gamma_H) 
set y_G=map_KGB_gen_tits(y,dual_quasisplit_form(G),M)
set S_H=pure_component_group(phi_H)
set phi_G=phi(y_G,gamma_G) 
set S_H=pure_component_group(phi_H)
set lifts=##for ph@i in unip_H do
prints(i);
 let gamma_H=ph.infinitesimal_character then
 y=y_gen(ph) then
 y_G=map_KGB_gen_tits(y,dual_quasisplit_form(G),M) then
 phi_G=phi(y_G,gamma_G)  then
 phi_H=phi(y,gamma_H) then
 S_H=pure_component_group(phi_H)
 in for x in S_H do e_star(x,phi_H,G,M) od
od
{


set G=Sp(4,R)
set Gd=dual_quasisplit_form(G)
set Gc=real_forms(G)[0]
set G11=real_forms(G)[1]
set (H,M,Hd)=endoscopic_group(G,[2,1]/5,w0(G))
set M=id_mat(rank(G))
{set ph=block_of(H.trivial)[0]}
set ph=parameter(KGB(H,0),[2,1],[0,0])
set gamma_H=ph.infinitesimal_character	
set y=y_gen(ph)
set phi_H=phi(y,gamma_H)
set Pi_H=L_packet(phi_H)
set S_H=component_group(phi_H)
set x_H=S_H[0]

set y_H=phi_H.y 

set gamma_G=gamma_H*M


set y_G=map_KGB_gen_tits(y,Gd,M) 
set phi_G=phi(y_G,gamma_G) 
set theta_G_v=involution(y) 
set theta_G=-^theta_G_v

{set Pi_G=L_packet(phi_G)}}
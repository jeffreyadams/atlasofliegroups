<basic.at
<K_types.at { for |int_part@KTypePol|, |s_part@KTypePol| }
<hermitian.at

set negative_terms(Param p)=[(KType,int)]:
(  let P=hermitian_form_irreducible(p), ht_p=height(p)
   then c=first_K_type(P)
   then a= #(!=int_part(c)), b=#(!=s_part(c)) { each one 0 or 1 }
   , ht_lim=ht_p { to ensure monotonicity }
in if a*b=1 then prints("The LKT is indefinite.") fi
;  for k@q in P
   do let npart = int: b*int_part(k)+a*s_part(k) { |s_part(k*(a+b*s))| }
   ,  ht_q = height(q)
   in if npart!=0 and
        (ht_q=ht_p or
	 ht_q>ht_p and ht_q>=ht_lim and (ht_lim:=ht_q; true)
	)
      then [(q,ht_q)]
      else []
      fi
   od.##
)

set certificate (Param p) =[(KType,int)]:
   if not is_hermitian(p) then prints("not hermitian"); []
   elif is_unitary(p) then prints("unitary"); []
   else prints("hermitian indefinite"); negative_terms(p)
   fi

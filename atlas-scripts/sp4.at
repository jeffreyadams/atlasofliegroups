<basic.at

{ This defines Sp(4,R) in natural coordinates. Diagram is is type C2. }

set simple_roots =   mat: [[1,-1],[0,2]] { vectors defining simple roots }
set simple_coroots = mat: [[1,-1],[0,1]] { vectors defining simple coroots }

set sp4 = root_datum(simple_roots,simple_coroots)
set sp4c = inner_class(sp4,"e")  { sp4 inner class }
set sp4R = quasisplit_form(sp4c) { sp4(R) real form }

set x = for i:KGB_size(sp4R) do KGB(sp4R,i) od { list of all x's, [x[0],..] }

set do_block ( (Param->) f) = { f is function executed for block elements }
  (Param p): void: let (b,)=block(p) in for q in b do f(q) od

set show_block = do_block ( (Param q): prints(q) )

{ Cartan #0, discrete series parameters; assume $a,b\geq0$ }
set ds0 (int a,int b) = param(x[0],[a-2,b-1],[0,0]/1) { large }
set ds1 (int a,int b) = param(x[1],[a-2,b-1],[0,0]/1) { large }
set hds (int a,int b) = param(x[2],[a-2,b-1],[0,0]/1) { holomorphic }
set ads (int a,int b) = param(x[3],[a-2,b-1],[0,0]/1) { anti-holomorphic }

{ Cartan #1: short real roots $\pm(1,1)$; assume $c\geq0$ }
set c1 (int c,rat y) =
  (if y<0 then y:=-y fi { real root reflection $\lambda-\rho_r$ immaterial }
  ;if y>=c/2 { if not do complex reflection }
   then param(x[9],[c-1,0],[y/2,y/2])  { $\lambda=[c,0]\pmod{(1,1)}$ }
   else param(x[4],[c-3,0],[y/2,-y/2]) { $\lambda=[0,c]\pmod{(1,-1)}$ }
   fi)

{ Cartan #2: long real roots $\pm(2,0)$; assume $b\geq0$ }
set c2a (int a,int b,rat y) =
  (if y<0 then y:=-y fi { real root reflection $\lambda-\rho_r$ fixes parity }
  ;if y>=b { if not do complex reflection }
   then param(x[7],[a%2,b-1],[y,0])       { $\lambda=[a,b]\pmod{(2,0)}$ }
   else param(x[5],[b-2,(a-1)%2],[0/1,y]) { $\lambda=[b,a]\pmod{(0,2)}$ }
   fi)
set c2b (int a,int b,rat y) =
  (if y<0 then y:=-y fi { real root reflection $\lambda-\rho_r$ fixes parity }
  ;if y>=b { if not do complex reflection }
   then param(x[8],[a%2,b-1],[y,0])       { $\lambda=[a,b]\pmod{(2,0)}$ }
   else param(x[6],[b-2,(a-1)%2],[0/1,y]) { $\lambda=[b,a]\pmod{(0,2)}$ }
   fi)

{ Cartan #3: split Cartan }
set c3 (int a,int b,rat nu0,rat nu1) =
  (if nu0<0 then nu0:=-nu0 fi { this real root reflection fixes parity $a$ }
  ;if nu1<0 then nu1:=-nu1 fi { this real root reflection fixes parity $b$ }
  ;if nu0>=nu1 { last possible real root reflection, about $\rho_r=\rho$ }
   then param(x[10],[a%2,(b-1)%2],[nu0,nu1])
   else param(x[10],[(b-1)%2,a%2],[nu1,nu0]) { so simply swap $\lambda-\rho$ }
   fi)

set triv = param (x[10],[0,0],[2,1]/1) { example: trivial representation }

{ example calls: show_block(triv);
  do_block( (Param q): prints("gamma = ",infinitesimal_character(q)) )(triv)
  deform(triv)
}

<springer_tables.at
<character_tables.at
<character_table_reps.at

{
atlas> show_nilpotent_orbits("E7".simply_connected)
i   H                       diagram          dim  BC Levi      Cent   A(O)
0   [0,0,0,0,0,0,0]         [0,0,0,0,0,0,0]  0    7T1          E7     [1]
1   [2,2,3,4,3,2,1]         [1,0,0,0,0,0,0]  34   A1+6T1       D6     [1]
2   [2,3,4,6,5,4,2]         [0,0,0,0,0,1,0]  52   2A1+5T1      A1+B4  [1]
3   [2,3,4,6,5,4,3]         [0,0,0,0,0,0,2]  54   3A1+4T1      F4     [1,2]
4   [3,4,6,8,6,4,2]         [0,0,1,0,0,0,0]  64   3A1+4T1      A1+C3  [1]
5   [4,4,6,8,6,4,2]         [2,0,0,0,0,0,0]  66   A2+5T1       A5     [1,2]
6   [3,5,6,9,7,5,3]         [0,1,0,0,0,0,1]  70   4A1+3T1      C3     [1,2]
7   [4,5,7,10,8,6,3]        [1,0,0,0,0,1,0]  76   A1+A2+4T1    A3+T1  [1,2]
8   [4,6,8,12,9,6,3]        [0,0,0,1,0,0,0]  82   2A1+A2+3T1   3A1    [1]
9   [6,7,10,14,11,8,4]      [2,0,0,0,0,1,0]  84   A3+4T1       A1+B3  [1]
10  [4,6,8,12,10,8,4]       [0,0,0,0,0,2,0]  84   2A2+3T1      A1+G2  [1]
11  [4,7,8,12,9,6,3]        [0,2,0,0,0,0,0]  84   3A1+A2+2T1   G2     [1,2]
12  [6,7,10,14,11,8,5]      [2,0,0,0,0,0,2]  86   A1+A3+3T1    B3     [1,2]
13  [5,7,10,14,11,8,4]      [0,0,1,0,0,1,0]  90   A1+2A2+2T1   2A1    [1]
14  [6,8,11,16,12,8,4]      [1,0,0,1,0,0,0]  92   A1+A3+3T1    3A1    [1]
15  [6,8,12,16,12,8,4]      [0,0,2,0,0,0,0]  94   D4+3T1       3A1    [1,2,3]
16  [6,8,11,16,13,9,5]      [1,0,0,0,1,0,1]  94   2A1+A3+2T1   2A1    [1,2]
17  [10,12,18,24,18,12,6]   [2,0,2,0,0,0,0]  96   D4+3T1       C3     [1]
18  [6,9,12,17,13,9,5]      [0,1,1,0,0,0,1]  96   A1+D4+2T1    2A1    [1,2,2,2]
19  [6,9,12,18,14,10,5]     [0,0,0,1,0,1,0]  98   A2+A3+2T1    A1+T1  [1,2]
20  [8,10,14,20,16,12,6]    [2,0,0,0,0,2,0]  100  A4+3T1       A2+T1  [1,2]
21  [6,9,12,18,15,10,5]     [0,0,0,0,2,0,0]  100  A1+A2+A3+T1  A1     [1,2]
22  [10,13,18,25,19,13,7]   [2,1,1,0,0,0,1]  102  A1+D4+2T1    B2     [1,2]
23  [10,13,18,26,21,16,9]   [2,0,0,0,0,2,2]  102  A5+2T1       G2     [1,2]
24  [8,11,15,22,17,12,6]    [1,0,0,1,0,1,0]  104  A1+A4+2T1    2T1    [1,2]
25  [10,13,18,26,20,14,7]   [2,0,0,1,0,1,0]  106  D5+2T1       A1+T1  [1,2]
26  [8,12,16,24,18,12,6]    [0,0,0,2,0,0,0]  106  A2+A4+T1     A1     [1]
27  [10,14,19,28,22,16,8]   [1,0,0,1,0,2,0]  108  A5+2T1       2A1    [1]
28  [10,13,18,26,21,14,7]   [2,0,0,0,2,0,0]  108  A1+D5+T1     A1     [1,2]
29  [10,14,19,28,22,16,9]   [1,0,0,1,0,1,2]  108  A1+A5+T1     A1     [1,2]
30  [10,14,20,28,22,16,8]   [0,0,2,0,0,2,0]  110  E6+T1        A1     [1,2]
31  [10,15,20,29,23,16,9]   [0,1,1,0,1,0,2]  110  D6+T1        A1     [1,2]
32  [14,18,26,36,28,20,10]  [2,0,2,0,0,2,0]  112  D5+2T1       2A1    [1]
33  [10,15,20,30,23,16,9]   [0,0,0,2,0,0,2]  112  E7           e   [1,2,2,2,3,6]
34  [14,19,26,37,29,20,10]  [2,1,1,0,1,1,0]  114  A1+D5+T1     A1     [1,2]
35  [12,18,24,36,28,20,10]  [0,0,0,2,0,2,0]  114  A6+T1        A1     [1]
36  [14,19,26,37,29,20,11]  [2,1,1,0,1,0,2]  114  D6+T1        A1     [1,2]
37  [14,19,26,38,29,20,11]  [2,0,0,2,0,0,2]  116  E7           e      [1,2,2,2]
38  [16,22,30,44,34,24,12]  [2,0,0,2,0,2,0]  118  E6+T1        T1     [1,2]
39  [18,25,34,49,39,28,15]  [2,1,1,0,1,2,2]  118  D6+T1        A1     [1,2]
40  [22,30,42,60,46,32,16]  [2,0,2,2,0,2,0]  120  E6+T1        A1     [1]
41  [18,25,34,50,39,28,15]  [2,0,0,2,0,2,2]  120  E7           e      [1,2,2,2]
42  [22,31,42,60,47,32,17]  [2,2,2,0,2,0,2]  122  E7           e      [1,2]
43  [26,37,50,72,57,40,21]  [2,2,2,0,2,2,2]  124  E7           e      [1,2]
44  [34,49,66,96,75,52,27]  [2,2,2,2,2,2,2]  126  E7           e      [1,2]

The duality on these orbits is given as follows:

Name      Diagram Dim Spec Dual      A:Abar  Dual Diagram
0         0000000 0   1    E7        1	     2222222
A1        1000000 34  1    E7(a1)    1	     2220222
2A1       0000010 52  1    E7(a2)    1	     2220202
(3A1)"    0000002 54  1    E6        Z2	     2022020
(3A1)'    0010000 64  0    E7(a3)    1	     2002022
A2        2000000 66  1    E7(a3)    S2	     2002022
4A1       0100001 70  0    E6(a1)    1	     2002020
A2+A1     1000010 76  1    E6(a1)    S2	     2002020
A2+2A1    0001000 82  1    E7(a4)    1	     2002002
A3        2000010 84  1    D6(a1)    1	     2110102
2A2       0000020 84  1    D5+A1     1	     2110110
A2+3A1    0200000 84  1    A6        Z2	     0002020
(A3+A1)"  2000002 86  1    D5        Z2	     2020020
2A2+A1    0010010 90  0    E7(a5)    1	     0002002
(A3+A1)'  1001000 92  0    E7(a5)    1	     0002002
D4(a1)    0020000 94  1    E7(a5)    S3	     0002002
A3+2A1    1000101 94  0    E6(a3)    Z2	     0020020
D4        2020000 96  1    (A5)"     1	     2000022
D4(a1)+A1 0110001 96  1    E6(a3)    S2Z2    0020020
A3+A2     0001010 98  1    D5(a1)+A1 S2:1    2000200
A4        2000020 100 1    D5(a1)    S2	     2001010
A3+A2+A1  0000200 100 1    A4+A2     Z2	     0002000
(A5)"     2000022 102 1    D4        1	     2020000
D4+A1     2110001 102 0    A4        Z2	     2000020
A4+A1     1001010 104 1    A4+A1     S2	     1001010
D5(a1)    2001010 106 1    A4        S2	     2000020
A4+A2     0002000 106 1    A3+A2+A1  1	     0000200
(A5)'     1001020 108 0    D4(a1)+A1 1	     0110001
A5+A1     1001012 108 0    D4(a1)    Z2	     0020000
D5(a1)+A1 2000200 108 1    A3+A2     Z2	     0001010
D6(a2)    0110102 110 0    D4(a1)    Z2	     0020000
E6(a3)    0020020 110 1    D4(a1)+A1 S2	     0110001
D5        2020020 112 1    (A3+A1)"  1	     2000002
E7(a5)    0002002 112 1    D4(a1)    S3Z2    0020000
A6        0002020 114 1    A2+3A1    1	     0200000
D5+A1     2110110 114 1    2A2       Z2	     0000020
D6(a1)    2110102 114 1    A3        Z2	     2000010
E7(a4)    2002002 116 1    A2+2A1    S2Z2:Z2 0001000
D6        2110122 118 0    A2        Z2	     2000000
E6(a1)    2002020 118 1    A2+A1     S2	     1000010
E6        2022020 120 1    (3A1)"    1	     0000002
E7(a3)    2002022 120 1    A2        S2Z2    2000000
E7(a2)    2220202 122 1    2A1       Z2	     0000010
E7(a1)    2220222 124 1    A1        Z2	     1000000
E7        2222222 126 1    0         Z2	     0000000
}

set E7_nilpotent_orbit_dual_map = (vec->vec):
(  let table = [vec,vec]: { (source,image) }
      [ ([0,0,0,0,0,0,0],[2,2,2,2,2,2,2])
      , ([1,0,0,0,0,0,0],[2,2,2,0,2,2,2])
      , ([0,0,0,0,0,1,0],[2,2,2,0,2,0,2])
      , ([0,0,0,0,0,0,2],[2,0,2,2,0,2,0])
      , ([0,0,1,0,0,0,0],[2,0,0,2,0,2,2])
      , ([2,0,0,0,0,0,0],[2,0,0,2,0,2,2])
      , ([0,1,0,0,0,0,1],[2,0,0,2,0,2,0])
      , ([1,0,0,0,0,1,0],[2,0,0,2,0,2,0])
      , ([0,0,0,1,0,0,0],[2,0,0,2,0,0,2])
      , ([2,0,0,0,0,1,0],[2,1,1,0,1,0,2])
      , ([0,0,0,0,0,2,0],[2,1,1,0,1,1,0])
      , ([0,2,0,0,0,0,0],[0,0,0,2,0,2,0])
      , ([2,0,0,0,0,0,2],[2,0,2,0,0,2,0])
      , ([0,0,1,0,0,1,0],[0,0,0,2,0,0,2])
      , ([1,0,0,1,0,0,0],[0,0,0,2,0,0,2])
      , ([0,0,2,0,0,0,0],[0,0,0,2,0,0,2])
      , ([1,0,0,0,1,0,1],[0,0,2,0,0,2,0])
      , ([2,0,2,0,0,0,0],[2,0,0,0,0,2,2])
      , ([0,1,1,0,0,0,1],[0,0,2,0,0,2,0])
      , ([0,0,0,1,0,1,0],[2,0,0,0,2,0,0])
      , ([2,0,0,0,0,2,0],[2,0,0,1,0,1,0])
      , ([0,0,0,0,2,0,0],[0,0,0,2,0,0,0])
      , ([2,0,0,0,0,2,2],[2,0,2,0,0,0,0])
      , ([2,1,1,0,0,0,1],[2,0,0,0,0,2,0])
      , ([1,0,0,1,0,1,0],[1,0,0,1,0,1,0])
      , ([2,0,0,1,0,1,0],[2,0,0,0,0,2,0])
      , ([0,0,0,2,0,0,0],[0,0,0,0,2,0,0])
      , ([1,0,0,1,0,2,0],[0,1,1,0,0,0,1])
      , ([1,0,0,1,0,1,2],[0,0,2,0,0,0,0])
      , ([2,0,0,0,2,0,0],[0,0,0,1,0,1,0])
      , ([0,1,1,0,1,0,2],[0,0,2,0,0,0,0])
      , ([0,0,2,0,0,2,0],[0,1,1,0,0,0,1])
      , ([2,0,2,0,0,2,0],[2,0,0,0,0,0,2])
      , ([0,0,0,2,0,0,2],[0,0,2,0,0,0,0])
      , ([0,0,0,2,0,2,0],[0,2,0,0,0,0,0])
      , ([2,1,1,0,1,1,0],[0,0,0,0,0,2,0])
      , ([2,1,1,0,1,0,2],[2,0,0,0,0,1,0])
      , ([2,0,0,2,0,0,2],[0,0,0,1,0,0,0])
      , ([2,1,1,0,1,2,2],[2,0,0,0,0,0,0])
      , ([2,0,0,2,0,2,0],[1,0,0,0,0,1,0])
      , ([2,0,2,2,0,2,0],[0,0,0,0,0,0,2])
      , ([2,0,0,2,0,2,2],[2,0,0,0,0,0,0])
      , ([2,2,2,0,2,0,2],[0,0,0,0,0,1,0])
      , ([2,2,2,0,2,2,2],[1,0,0,0,0,0,0])
      , ([2,2,2,2,2,2,2],[0,0,0,0,0,0,0])
      ]
   then leq (int i,int j) = bool:
        let (a,)=table[i], (b,)=table[j] in lex_lesseq(a,b)
   then sigma = sort(#table, leq)
in table := for i in sigma do table[i] od { adjust table to sorted form }
;  { E7_nilpotent_orbit_dual_map = }
   (vec diagram) vec:
   let predicate(int i)= bool: let (key,)=table[i] in lex_lesseq(diagram,key)
   then k = binary_search_first(predicate,0,#table)
   then (source,image) = assert(k<#table,"Wrong E7 diagram"); table[k]
   in assert(source=diagram,"Wrong E7 diagram"); image
)

{ The "Springer map" is given by the following mapping in terms of orbit
  diagrams; the image value are character indices according to the numbering
  of |e7_table| from character_table_E7,at
}
set E7_Springer_map = (vec->int): { orbit diagrams as |vec| values }
(  let table = [vec,int]: { (diagram,character index) }
      [ ([0,0,0,0,0,0,0],  1) {  1 63  }
      , ([1,0,0,0,0,0,0],  2) {  7,46  }
      , ([0,0,0,0,0,1,0], 10) {  27,37 }
      , ([0,0,0,0,0,0,2],  6) {  21,36 }
      , ([0,0,1,0,0,0,0], 12) {  35,31 }
      , ([2,0,0,0,0,0,0], 16) {  56,30 }
      , ([0,1,0,0,0,0,1],  5) {  15,28 }
      , ([1,0,0,0,0,1,0], 28) { 120,25 }
      , ([0,0,0,1,0,0,0], 35) { 189,22 }
      , ([2,0,0,0,0,1,0], 39) { 210,21 }
      , ([0,0,0,0,0,2,0], 31) { 168,21 }
      , ([0,2,0,0,0,0,0], 27) { 105,21 }
      , ([2,0,0,0,0,0,2], 33) { 189,20 }
      , ([0,0,1,0,0,1,0], 18) {  70,18 }
      , ([1,0,0,1,0,0,0], 44) { 280,17 }
      , ([0,0,2,0,0,0,0], 48) { 315,16 }
      , ([1,0,0,0,1,0,1], 43) { 216,16 }
      , ([2,0,2,0,0,0,0], 26) { 105,15 }
      , ([0,1,1,0,0,0,1], 55) { 405,15 }
      , ([0,0,0,1,0,1,0], 53) { 378,14 }
      , ([2,0,0,0,0,2,0], 56) { 420,13 }
      , ([0,0,0,0,2,0,0], 41) { 210,13 }
      , ([2,0,0,0,0,2,2], 25) {  84,12 }
      , ([2,1,1,0,0,0,1], 21) { 105,12 }
      , ([1,0,0,1,0,1,0], 58) { 512,11 }
      , ([2,0,0,1,0,1,0], 57) { 420,10 }
      , ([0,0,0,2,0,0,0], 38) { 210,10 }
      , ([1,0,0,1,0,2,0], 42) { 216, 9 }
      , ([1,0,0,1,0,1,2], 19) {  70, 9 }
      , ([2,0,0,0,2,0,0], 52) { 378, 9 }
      , ([0,1,1,0,1,0,2], 47) { 280, 8 }
      , ([0,0,2,0,0,2,0], 54) { 405, 8 }
      , ([2,0,2,0,0,2,0], 32) { 189, 7 }
      , ([0,0,0,2,0,0,2], 49) { 315, 7 }
      , ([0,0,0,2,0,2,0], 22) { 105, 6 }
      , ([2,1,1,0,1,1,0], 30) { 168, 6 }
      , ([2,1,1,0,1,0,2], 40) { 210, 6 }
      , ([2,0,0,2,0,0,2], 34) { 189, 5 }
      , ([2,1,1,0,1,2,2], 15) {  35, 4 }
      , ([2,0,0,2,0,2,0], 29) { 120, 4 }
      , ([2,0,2,2,0,2,0],  9) {  21, 3 }
      , ([2,0,0,2,0,2,2], 17) {  56, 3 }
      , ([2,2,2,0,2,0,2], 11) {  27, 2 }
      , ([2,2,2,0,2,2,2],  3) {   7, 1 }
      , ([2,2,2,2,2,2,2],  0) {   1, 0 }
      ]
   then leq (int i,int j) = bool:
        let (a,)=table[i], (b,)=table[j] in lex_lesseq(a,b)
   then sigma = sort(#table, leq)
in table := for i in sigma do table[i] od { adjust table to sorted form }
;  { E7_Springer_map = }
   (vec diagram) int:
   let predicate(int i)= bool: let (key,)=table[i] in lex_lesseq(diagram,key)
   then k = binary_search_first(predicate,0,#table)
   then (source,image) = assert(k<#table,"Wrong E7 diagram"); table[k]
   in assert(source=diagram,"Wrong E7 diagram"); image
)

set springer_table_E7 () = SpringerTable:
   let ct=character_table_E7() then rd=ct.root_datum {simply_connected("E7")}
   then drd = dual(rd)
in ( ct
   , orbits(rd)
   , (ComplexNilpotent O) ComplexNilpotent:
     complex_nilpotent_from_diagram(drd,E7_nilpotent_orbit_dual_map(O.diagram))
   , (ComplexNilpotent O) ComplexNilpotent:
     complex_nilpotent_from_diagram(rd,E7_nilpotent_orbit_dual_map(O.diagram))
   , (ComplexNilpotent O) int: E7_Springer_map(O.diagram)
   )

{ In the general case we take into account the permutation of the simple root
  indices returned by |test_simple_type| (it is a map from Bourbaki indices to
  |rd| indices, which |stratified_diagram@(ComplexNilpotent,[int])| takes into
  account to get into Bourbaki order, and which |permute| uses to transform the
  dual diagram from |E7_nilpotent_orbit_dual_map| into the order of |dual(rd)|.
}
set springer_table_E7 (RootDatum rd) = SpringerTable:
   let map = test_simple_type("E",rd), drd = dual(rd)
in assert(#map=7,"Root datum has wrong rank "+#map);
   ( character_table_E7(rd)
   , orbits(rd)
   , (ComplexNilpotent O) ComplexNilpotent:
     let diagram = stratified_diagram(O,map)
     then dual_O = vec: E7_nilpotent_orbit_dual_map(diagram)
     in complex_nilpotent_from_diagram(drd,permute(map,dual_O))
   , (ComplexNilpotent dual_O) ComplexNilpotent:
     let diagram = stratified_diagram(dual_O,map)
     then O = vec: E7_nilpotent_orbit_dual_map(diagram)
     in complex_nilpotent_from_diagram(rd,permute(map,O))
   , (ComplexNilpotent O) int: E7_Springer_map(stratified_diagram(O,map))
   )

set dual_map_E7(ComplexNilpotent O)=ComplexNilpotent:
complex_nilpotent_from_diagram(O.root_datum
			,E7_nilpotent_orbit_dual_map(O.diagram))

{
[0,0,0,0,0,0,0] e    1 63
[1,0,0,0,0,0,0] A1   7,46
[0,0,0,0,0,1,0] 2A1   27,37
[0,0,0,0,0,0,2] 3A1   21,36
[0,0,1,0,0,0,0] 3A1   35,31
[2,0,0,0,0,0,0] A2    56,30
[0,1,0,0,0,0,1] 4A1   15,28
[1,0,0,0,0,1,0] A1+A2  120,25
[0,0,0,1,0,0,0] 2A1+A2 189,22
[2,0,0,0,0,1,0] A3     210,21
[0,0,0,0,0,2,0] 2A2    168,21
[0,2,0,0,0,0,0] 3A1+A2 105,21
[2,0,0,0,0,0,2] A1+A3  189,20
[0,0,1,0,0,1,0] A1+2A2  70,18
[1,0,0,1,0,0,0] A1+A3  280,17
[0,0,2,0,0,0,0] D4     315,16
[1,0,0,0,1,0,1] 2A1+A3 216,16
[2,0,2,0,0,0,0] D4     105,15
[0,1,1,0,0,0,1] A1+D4  405,15
[0,0,0,1,0,1,0] A2+A3  378,14
[2,0,0,0,0,2,0] A4     420,13
[0,0,0,0,2,0,0] A1+A2+A3 210,13
[2,1,1,0,0,0,1] A1+D4     84,12
[2,0,0,0,0,2,2] A5       105,12
[1,0,0,1,0,1,0] A1+A4    512,11
[2,0,0,1,0,1,0] D5       420,10
[0,0,0,2,0,0,0] A2+A4    210,10
[1,0,0,1,0,2,0] A5       216, 9
[2,0,0,0,2,0,0] A1+D5    378, 9
[1,0,0,1,0,1,2] A1+A5     70, 9
[0,0,2,0,0,2,0] E6       405, 8
[0,1,1,0,1,0,2] D6       280, 8
[2,0,2,0,0,2,0] D5       189, 7
[0,0,0,2,0,0,2] E7 	 315, 7
[2,1,1,0,1,1,0] A1+D5 	 168, 6
[0,0,0,2,0,2,0] A6 	 105, 6
[2,1,1,0,1,0,2] D6 	 210, 6
[2,0,0,2,0,0,2] E7 	 189, 5
[2,0,0,2,0,2,0] E6 	 120, 4
[2,1,1,0,1,2,2] D6 	  35, 4
[2,0,2,2,0,2,0] E6 	  21, 3
[2,0,0,2,0,2,2] E7 	  56, 3
[2,2,2,0,2,0,2] E7 	  27, 2
[2,2,2,0,2,2,2] E7 	   7, 1
[2,2,2,2,2,2,2] E7 	   1, 0
}

set springer_by_signature_lookup_E7 = [ [int],(int,int) ]:
[
([0,0,0,0,0,0,0],(1,63)),
([1,0,0,0,0,0,0],(7,46)),
([0,0,0,0,0,1,0],(27,37)),
([0,0,0,0,0,0,2],(21,36)),
([0,0,1,0,0,0,0],(35,31)),
([2,0,0,0,0,0,0],(56,30)),
([0,1,0,0,0,0,1],(15,28)),
([1,0,0,0,0,1,0],(120,25)),
([0,0,0,1,0,0,0],(189,22)),
([2,0,0,0,0,1,0],(210,21)),
([0,0,0,0,0,2,0],(168,21)),
([0,2,0,0,0,0,0],(105,21)),
([2,0,0,0,0,0,2],(189,20)),
([0,0,1,0,0,1,0],(70,18)),
([1,0,0,1,0,0,0],(280,17)),
([0,0,2,0,0,0,0],(315,16)),
([1,0,0,0,1,0,1],(216,16)),
([2,0,2,0,0,0,0],(105,15)),
([0,1,1,0,0,0,1],(405,15)),
([0,0,0,1,0,1,0],(378,14)),
([2,0,0,0,0,2,0],(420,13)),
([0,0,0,0,2,0,0],(210,13)),
([2,0,0,0,0,2,2],(105,12)),
([2,1,1,0,0,0,1],(84,12)),
([1,0,0,1,0,1,0],(512,11)),
([2,0,0,1,0,1,0],(420,10)),
([0,0,0,2,0,0,0],(210,10)),
([1,0,0,1,0,2,0],(216,9)),
([1,0,0,1,0,1,2],(70,9)),
([2,0,0,0,2,0,0],(378,9)),
([0,1,1,0,1,0,2],(280,8)),
([0,0,2,0,0,2,0],(405,8)),
([2,0,2,0,0,2,0],(189,7)),
([0,0,0,2,0,0,2],(315,7)),
([0,0,0,2,0,2,0],(105,6)),
([2,1,1,0,1,1,0],(168,6)),
([2,1,1,0,1,0,2],(210,6)),
([2,0,0,2,0,0,2],(189,5)),
([2,1,1,0,1,2,2],(35,4)),
([2,0,0,2,0,2,0],(120,4)),
([2,0,2,2,0,2,0],(21,3)),
([2,0,0,2,0,2,2],(56,3)),
([2,2,2,0,2,0,2],(27,2)),
([2,2,2,0,2,2,2],(7,1)),
([2,2,2,2,2,2,2],(1,0))]

set springer_by_signature_E7 (ComplexNilpotent O) = (int,int):
   assert(O.root_datum.Lie_type=Lie_type("E7"),"Not type E7");
   for (v,sig) in springer_by_signature_lookup_E7
   do if v=O.diagram then return sig fi
   od; error("Unknown E7 nilpotent orbit ",O)

set springer_E7 (CharacterTable ct,ComplexNilpotent O) = int:
   let (sig_0,sig_1) = springer_by_signature_E7(O)
   in for v@i in ct.characters
   do ct.dimension(v)=sig_0 and ct.degree(i)=sig_1
   od.first

set springer_table_E7 (CharacterTable ct) = SpringerTable:
   let springer(ComplexNilpotent O) = springer_E7(ct,O)
in (ct
   ,ct.root_datum.orbits
   ,dual_map_E7@ComplexNilpotent
   ,dual_map_E7@ComplexNilpotent
   ,springer
   )
